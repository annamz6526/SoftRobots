import Sofa

import os

def createScene(rootNode):

        rootNode.createObject('VisualStyle', displayFlags='showForceFields showBehaviorModels')
        rootNode.createObject('RequiredPlugin', name='SoftRobots', pluginName='SoftRobots')
        rootNode.createObject('RequiredPlugin', name='SofaPython', pluginName='SofaPython')
        rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels hideCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')
        rootNode.findData('gravity').value='0 0 0';
        rootNode.createObject('PythonScriptController', filename="pythonControllers/fingerController.py", classname="controller")
        rootNode.createObject('FreeMotionAnimationLoop')
        rootNode.createObject('GenericConstraintSolver', tolerance="1e-12", maxIterations="10000")

        actuator = rootNode.createChild('actuator')
        actuator.createObject('EulerImplicit', name='odesolver')
        actuator.createObject('SparseLDLSolver', name='directSolver')
        actuator.createObject('MeshVTKLoader', name='loader', filename='model/unity-s.vtk')
        actuator.createObject('Mesh', src='@loader', name='container')
        actuator.createObject('MechanicalObject', name='tetras', template='Vec3d', showObject='true', showObjectScale='1')
        actuator.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='500', drawAsEdges="true")
        actuator.createObject('UniformMass', totalMass='0.0008')
        #actuator.createObject('BoxROI', name='boxROI', box='-22.5 50 -22.5 22.5 55 22.5', drawBoxes='true')
        actuator.createObject('BoxROI', name='boxROI', box='-13 18 -13 13 23 13', drawBoxes='true')
        actuator.createObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12', angularStiffness='1e12')
        ##actuator.createObject('BoxROI', name='boxROISubTopo', box='-22.5 50 -22.5 22.5 55 22.5', drawBoxes='true')
        #actuator.createObject('BoxROI', name='boxROISubTopo', box='-13 18 -13 13 23 13', drawBoxes='true')
        ##actuator.createObject('BoxROI', name='boxROISubTopo2', box='-22.5 -50 -22.5 22.5 -55 22.5', drawBoxes='true')
        #actuator.createObject('BoxROI', name='boxROISubTopo2', box='-13 -18 -13 13 -23 13', drawBoxes='true')
        actuator.createObject('LinearSolverConstraintCorrection', solverName='directSolver')
        
        #modelSubTopo = actuator.createChild('modelSubTopo')
        #modelSubTopo.createObject('Mesh', position='@loader.position', tetrahedra="@boxROISubTopo.tetrahedraInROI", name='container')
        #modelSubTopo.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='1500')
        #modelSubTopo2 = actuator.createChild('modelSubTopo2')
        #modelSubTopo2.createObject('Mesh', position='@loader.position', tetrahedra="@boxROISubTopo2.tetrahedraInROI", name='container')
        #modelSubTopo2.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='1500')

        for i in range(4):
                cavity = actuator.createChild('cavity'+str(i+1))
                file_name = 'model/cavity' + str(i+1) + '.stl'
                cavity.createObject('MeshSTLLoader', name='loader', filename=file_name,translation = "0 0 0",rotation="0 0 0")
                cavity.createObject('Mesh', src='@loader', name='topo')
                cavity.createObject('MechanicalObject', name='cavity')
                cavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', value="0.0001", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002', valueType="pressure")
                cavity.createObject('BarycentricMapping', name='mapping',  mapForces='false', mapMasses='false')